 //Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, 
// return the index where it would be if it were inserted in order.
//leet code
You must write an algorithm with O(log n) runtime complexity.
 public class Main
{
	public static void main(String[] args) {
	    int[] arr = {1,2,3,5};
	    int target =6;
	  System.out.println(searchInsert(arr,target));
	}
	 public static int searchInsert(int[] nums, int target) {
        
        int start = 0;
        int end = nums.length-1;
        int ans =-1;
        
        while(start<=end){
            int mid = start+(end-start)/2;
                if(target > nums[mid]){
                    start = mid+1;
                    ans = start;
                }
            else if(target < nums[mid]){
                end = mid-1;
                ans = start;
                
            }
            else{
                ans = mid;
                return ans;
            }
            
           
        }
        
        return ans; 
        
    }
}
